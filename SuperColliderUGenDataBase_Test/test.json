[{
"plugin" : "DelayUGens",
   "ugens" : [{
      "name": "PlayBuf",
      "categories": [ "buffer" ],
      "rates": ["a", "k"],
      "outputs": {"arg": "numChannels"},
      "properties": ["readbuffer", "sideeffect", "doneflag"],
      "args": [{
         "name": "numChannels",
         "type": "i",
         "summary": "the number of channels that the buffer will be",
         "detail": "Since this is a constant, a change in number of channels of the underlying bus must be reflected by creating different SynthDefs. If a buffer identifier is used of a buffer that has a different numChannels then specified in the PlayBuf, it will fail silently."
      }, {
         "name": {"default": "bufnum", "scala": "buf"},
         "default": {"default": 0, "scala": null},
         "summary": "the identifier of the buffer to use"
      }, {
         "name": {"default": "rate", "scala": "speed"},
         "default": 1.0,
         "summary": "relative speed of the playback",
         "detail": "`1.0` advances the play head by the server's sample rate each second, so `2.0` means doubling speed (and pitch), and `0.5` means half speed (and half pitch). Negative numbers can be used for backwards playback. If the underlying buffer represents a sound at a different sample rate, the rate should be multiplied by ${ugen BufRateScale} for the given buffer to obtain the correct speed."
      }, {
         "name": {"default": "trigger", "scala": "trig"},
         "default": 1,
         "summary": "a trigger which causes a jump to the given ${arg startPos}",
         "detail": "A trigger occurs when a signal changes from non-positive to positive (e.g. <= 0 to >0)."
      }, {
         "name": "startPos", 
         "default": 0,
         "summary": "sample frame to start playback",
         "detail": "This is read when a trigger occurs."
      }, {
         "name": "loop",
         "default": true,
         "summary": "whether to loop after the play head reaches the buffer end",
         "detail": "this can be modulated"
      }, {
         "name": {"default": "doneAction", "clj": "action"},
         "default": "doNothing",
         "summary": "what to do when the play head reaches the buffer end"
      }],
      "summary": "A UGen to play back samples from a buffer in memory",
      "detail": "${ugen PlayBuf} provides a kind of high-level interface to sample-playback, whereas ${ugen BufRd} represents a kind of lower-level access. While ${ugen BufRd} has a random-access-pointer in the form of a phase input, ${ugen PlayBuf} advances the phase automatically based on a given playback speed. ${ugen PlayBuf} uses cubic interpolation.",
      "links": [ "ugen.BufRd", "ugen.DiskIn", "ugen.RecordBuf", "ugen.Done", "ugen.BufRateScale", "ugen.BufFrames" ]
   }, {
      "name": "DelayN",
      "rates": ["a", "k"],
      "checks": { "require-ar": "in" },
      "categories": [ "delays" ],
      "args": [{
         "name": "in",
         "default" : {"default":0, "scala":null},
         "summary": "The input signal"
      }, {
         "name": "maxDelayTime",
         "default": 0.2,
         "summary": "The maximum delay time in seconds",
         "detail": "Used to initialize the delay buffer size"
      }, {
         "name": "delayTime",
         "default": 0.2,
         "summary": "Delay time in seconds."
      }],
      "summary": "Simple delay line with no interpolation.",
      "links": ["ugen.DelayL", "ugen.DelayC"]
   }, {
      "name": "DelayL",
      "inherits": "DelayN",
      "summary": "Simple delay line with linear interpolation.",
      "links": ["ugen.DelayN", "ugen.DelayC"]
   }]
}, {
"plugin": "DiskIOUGens",
   "ugens" : [{
      "name": "DiskIn",
      "categories": [ "inout", "buffer" ],
      "properties": [ "readbuffer", "sideeffect" ],
      "rates": [ "a" ],
      "outputs": {"arg": "numChannels"},
      "args": [{
         "name": "numChannels",
         "type": "i",
         "summary": "the number of channels the file and the buffer will have",
         "detail": "Since this is a constant, it must be pre-determined. Different SynthDefs must be created for different numbers of channels."
      }, {
         "name": {"default": "bufnum", "scala": "buf"},
         "summary": "the id of the buffer with the correct number of channels and frames"
      }, {
         "name": "loop",
         "default": false,
         "summary": "whether the file should loop when its end is reached",
         "detail": "this can be modulated"
      }],
      "summary": "A UGen to stream in a signal from an audio file",
      "detail": "Continuously plays a longer audio file from disk. This requires a buffer to be preloaded with one buffer size of sound. If loop is set to 1, the file will loop.\n '''Note''': The buffer size must be a multiple of (2 * the server's block size).",
      "links": ["Buffer#cue", "ugen.VDiskIn", "ugen.PlayBuf" ]
   }]
}]
